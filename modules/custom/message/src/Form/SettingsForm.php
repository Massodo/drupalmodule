<?php

namespace Drupal\message\Form;

use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormStateInterface;

class SettingsForm extends ConfigFormBase{

  /**
   * Gets the configuration names that will be editable.
   *
   * @return array
   *   An array of configuration object names that are editable if called in
   *   conjunction with the trait's config() method.
   */
  protected function getEditableConfigNames()
  {
    return ['message.settings'];
  }

  /**
   * Returns a unique string identifying the form.
   *
   * @return string
   *   The unique string identifying the form.
   */
  public function getFormId()
  {
    return 'message_settings_form';
  }

  public function buildForm(array $form, FormStateInterface $form_state)
  {
    $config = $this->config('message.settings');

    $form['height'] = array(
      '#type' => 'number',
      '#title' => $this->t('Height'),
      '#default_value' => $config->get('height'),
    );

    $form['width'] = array(
      '#type' => 'number',
      '#title' => $this->t('Width'),
      '#default_value' => $config->get('width'),
    );

    $form['background'] = array(
      '#type' => 'color',
      '#title' => $this->t('Background color'),
      '#default_value' => $config->get('background'),
    );

    $form['border'] = array(
      '#type' => 'number',
      '#title' => $this->t('Border'),
      '#default_value' => $config->get('border'),
    );

    $form['borderColor'] = array(
      '#type' => 'color',
      '#title' => $this->t('Border color'),
      '#default_value' => $config->get('borderColor'),
    );

    $form['fontSize'] = array(
      '#type' => 'number',
      '#title' => $this->t('Font size'),
      '#default_value' => $config->get('fontSize'),
    );

    $form['fontColor'] = array(
      '#type' => 'color',
      '#title' => $this->t('Font color'),
      '#default_value' => $config->get('fontColor'),
    );

    $form['title'] = array(
      '#type' => 'textfield',
      '#title' => $this->t('Title message'),
      '#default_value' => $config->get('title'),
    );

    $form['message'] = array(
      '#type' => 'textfield',
      '#title' => $this->t('Message'),
      '#default_value' => $config->get('message'),
    );

    return parent ::buildForm($form, $form_state);
  }

  public function validateForm(array &$form, FormStateInterface $form_state)
  {
    if($form_state->getValue('height') < 0) {
      $form_state->setErrorByName('height', t('Height can\'t be less then 0'));
    }
    if($form_state->getValue('width') < 0) {
      $form_state->setErrorByName('width', t('Width can\'t be less then 0'));
    }
    if($form_state->getValue('fontSize') < 0) {
      $form_state->getValue('font color', t('Font size can\'t be less then 0'));
    }
    if($form_state->getValue('border') < 0){
      $form_state->setErrorByName('border', t('Border can\'t be less then 0'));
    }
    parent ::validateForm($form, $form_state); // TODO: Change the autogenerated stub
  }

  public function submitForm(array &$form, FormStateInterface $form_state)
  {
    \Drupal::configFactory()->getEditable('message.settings')
    ->set('height', $form_state->getValue('height'))
    ->set('width', $form_state->getValue('width'))
    ->set('background', $form_state->getValue('background'))
    ->set('border', $form_state->getValue('border'))
    ->set('borderColor', $form_state->getValue('borderColor'))
    ->set('fontSize', $form_state->getValue('fontSize'))
    ->set('fontColor', $form_state->getValue('fontColor'))
    ->set('title', $form_state->getValue('title'))
    ->set('message', $form_state->getValue('message'))
    ->save();
    parent ::submitForm($form, $form_state);
    return $form;
  }
}