<?php
/**
 * @file
 * Main module file, only hooks are allowed here.
 */

use Drupal\Component\Utility\Unicode;

/**
 * Implements hook_page_attachments().
 */
function gmap_static_page_attachments(array &$attachments) {
  $view_mode = gmap_static_view_mode();
  if ($view_mode && gmap_static_page_is_enabled()) {
    $attachments['#attached']['drupalSettings']['gmap_view_mode'] = [$view_mode];
    $attachments['#attached']['library'][] = 'gmap_static/gmap_static';
    $attachments['#attached']['drupalSettings']['gmap_static']['apiKey']
    = Drupal::config('gmap_static.settings')->get('apiKey');
  }
}

/**
 * Find out if visitor uses mobile device or computer.
 *
 * @return string
 *   Returns 'mobile' or 'computer' string.
 */
function gmap_static_device() {
  $mobile = array('iPhone', 'Android', 'webOS', 'BlackBerry', 'iPod', 'iPad');
  foreach ($mobile as $agent) {
    if (strpos($_SERVER['HTTP_USER_AGENT'], $agent)) {
      return 'mobile';
    }
  }
  return 'computer';
}

/**
 * Decide what view mode to use for current device.
 */
function gmap_static_view_mode() {
  $config = \Drupal::config('gmap_static.settings');
  $device = 'device_' . gmap_static_device();
  $option = $config->get($device);
  if ($option) {
    return $config->get($device);
  }
  else {
    return FALSE;
  }
}

/**
 * Find out if module should work on this page.
 *
 * @return bool
 *   Returns TRUE if module is supposed to work on current page, otherwise
 *   FALSE.
 */
function gmap_static_page_is_enabled() {
  $config = \Drupal::config('gmap_static.settings');
  $pages = $config->get('pages');
  if ($pages) {
    $path_matcher = \Drupal::service('path.matcher');
    $pages = Unicode::strtolower($pages);
    $current_path = $_GET['q'];
    $path = Unicode::strtolower(\Drupal::request()->getRequestUri($current_path));
    $page_match = $path_matcher->matchPath($path, $pages);
    if ($path != $current_path) {
      $page_match = $page_match || $path_matcher->matchPath($current_path, $pages);
    }
  }
  else {
    $page_match = FALSE;
  }
  $visibility = ($config->get('visibility')) ? $config->get('visibility') : 0;
  $page_match = !($visibility xor $page_match);
  return $page_match;
}

/**
 * Implements hook_uninstall().
 */
function gmap_static_uninstall () {
  Drupal::configFactory()->getEditable('gmap_static.settings')->delete();
}